"""Initial migration with named constraints

Revision ID: 2a12e5747505
Revises: 
Create Date: 2025-06-13 15:34:17.150378

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = '2a12e5747505'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('account', schema=None) as batch_op:
        batch_op.add_column(sa.Column('currency', sa.String(length=3), nullable=True))
        batch_op.add_column(sa.Column('status', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.drop_column('is_active')
        batch_op.drop_column('activated_by')
        batch_op.drop_column('activated_at')

    with op.batch_alter_table('agency', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.drop_column('email')
        batch_op.drop_column('wilaya')
        batch_op.drop_column('director_id')

    with op.batch_alter_table('application_progress', schema=None) as batch_op:
        batch_op.add_column(sa.Column('notes', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('completed_at', sa.DateTime(), nullable=True))
        batch_op.drop_column('data')

    with op.batch_alter_table('document', schema=None) as batch_op:
        batch_op.alter_column('file_path',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=200),
               existing_nullable=False)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=22),
               type_=sa.Enum('PENDING', 'VERIFIED', 'REJECTED', name='document_status_enum'),
               existing_nullable=True)
        batch_op.drop_column('file_type')
        batch_op.drop_column('quality_score')
        batch_op.drop_column('extracted_data')

    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.add_column(sa.Column('read', sa.Boolean(), nullable=True))
        batch_op.alter_column('type',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=20),
               existing_nullable=True)
        batch_op.drop_column('status')
        batch_op.drop_column('sent_at')

    with op.batch_alter_table('offer', schema=None) as batch_op:
        batch_op.add_column(sa.Column('title', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('conditions', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('start_date', sa.DateTime(), nullable=False))
        batch_op.add_column(sa.Column('end_date', sa.DateTime(), nullable=False))
        batch_op.alter_column('description',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('type',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.drop_column('name')
        batch_op.drop_column('is_active')
        batch_op.drop_column('requirements')

    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('two_fa_method', sa.String(length=10), nullable=True))
        batch_op.add_column(sa.Column('face_embedding', sa.PickleType(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('nationality', sa.String(length=100), nullable=True))
        batch_op.alter_column('first_name',
               existing_type=sa.VARCHAR(length=80),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('last_name',
               existing_type=sa.VARCHAR(length=80),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('phone',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('wilaya',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('juridic_state',
               existing_type=sa.VARCHAR(length=11),
               type_=sa.Enum('PHYSICAL', 'MORAL', name='juridic_state_enum'),
               existing_nullable=True)
        batch_op.alter_column('family_status',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('CELIBATAIRE', 'MARIE', 'DIVORCE', 'VEUF', 'AUTRE', name='family_status_enum'),
               existing_nullable=True)
        batch_op.alter_column('profession',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('ETUDIANT', 'EMPLOYE_PUBLIC', 'EMPLOYE_PRIVE', 'INDEPENDANT', 'ARTISAN', 'COMMERCANT', 'PROF_LIBERALE', 'RETRAITE', 'SANS_EMPLOI', 'FOYER', 'AUTRE', name='profession_enum'),
               existing_nullable=True)
        batch_op.alter_column('secteur_activite',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('ADMINISTRATION', 'EDUCATION', 'SANTE', 'BANQUE', 'COMMERCE', 'BTP', 'TRANSPORT', 'INDUSTRIE', 'AGRICULTURE', 'TIC', 'HOTEL', 'MEDIAS', 'JURIDIQUE', 'AUTRE', name='secteur_activite_enum'),
               existing_nullable=True)
        batch_op.alter_column('salary_range',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('MOINS_20K', 'DE_20K_40K', 'DE_40K_60K', 'DE_60K_100K', 'DE_100K_200K', 'DE_200K_500K', 'PLUS_500K', 'NON_DECLARE', name='salary_range_enum'),
               existing_nullable=True)
        batch_op.drop_column('biometric_data')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('biometric_data', sa.VARCHAR(length=255), nullable=True))
        batch_op.alter_column('salary_range',
               existing_type=sa.Enum('MOINS_20K', 'DE_20K_40K', 'DE_40K_60K', 'DE_60K_100K', 'DE_100K_200K', 'DE_200K_500K', 'PLUS_500K', 'NON_DECLARE', name='salary_range_enum'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.alter_column('secteur_activite',
               existing_type=sa.Enum('ADMINISTRATION', 'EDUCATION', 'SANTE', 'BANQUE', 'COMMERCE', 'BTP', 'TRANSPORT', 'INDUSTRIE', 'AGRICULTURE', 'TIC', 'HOTEL', 'MEDIAS', 'JURIDIQUE', 'AUTRE', name='secteur_activite_enum'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.alter_column('profession',
               existing_type=sa.Enum('ETUDIANT', 'EMPLOYE_PUBLIC', 'EMPLOYE_PRIVE', 'INDEPENDANT', 'ARTISAN', 'COMMERCANT', 'PROF_LIBERALE', 'RETRAITE', 'SANS_EMPLOI', 'FOYER', 'AUTRE', name='profession_enum'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.alter_column('family_status',
               existing_type=sa.Enum('CELIBATAIRE', 'MARIE', 'DIVORCE', 'VEUF', 'AUTRE', name='family_status_enum'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.alter_column('juridic_state',
               existing_type=sa.Enum('PHYSICAL', 'MORAL', name='juridic_state_enum'),
               type_=sa.VARCHAR(length=11),
               existing_nullable=True)
        batch_op.alter_column('wilaya',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('phone',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('last_name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=80),
               existing_nullable=True)
        batch_op.alter_column('first_name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=80),
               existing_nullable=True)
        batch_op.drop_column('nationality')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('face_embedding')
        batch_op.drop_column('two_fa_method')

    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('offer', schema=None) as batch_op:
        batch_op.add_column(sa.Column('requirements', sqlite.JSON(), nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.BOOLEAN(), nullable=True))
        batch_op.add_column(sa.Column('name', sa.VARCHAR(length=100), nullable=False))
        batch_op.alter_column('type',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('description',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.drop_column('end_date')
        batch_op.drop_column('start_date')
        batch_op.drop_column('conditions')
        batch_op.drop_column('title')

    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.add_column(sa.Column('sent_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('status', sa.VARCHAR(length=20), nullable=True))
        batch_op.alter_column('type',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.drop_column('read')

    with op.batch_alter_table('document', schema=None) as batch_op:
        batch_op.add_column(sa.Column('extracted_data', sqlite.JSON(), nullable=True))
        batch_op.add_column(sa.Column('quality_score', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('file_type', sa.VARCHAR(length=10), nullable=True))
        batch_op.alter_column('status',
               existing_type=sa.Enum('PENDING', 'VERIFIED', 'REJECTED', name='document_status_enum'),
               type_=sa.VARCHAR(length=22),
               existing_nullable=True)
        batch_op.alter_column('file_path',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)

    with op.batch_alter_table('application_progress', schema=None) as batch_op:
        batch_op.add_column(sa.Column('data', sqlite.JSON(), nullable=True))
        batch_op.drop_column('completed_at')
        batch_op.drop_column('notes')

    with op.batch_alter_table('agency', schema=None) as batch_op:
        batch_op.add_column(sa.Column('director_id', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('wilaya', sa.VARCHAR(length=100), nullable=False))
        batch_op.add_column(sa.Column('email', sa.VARCHAR(length=120), nullable=True))
        batch_op.create_foreign_key(None, 'user', ['director_id'], ['id'])
        batch_op.drop_column('created_at')

    with op.batch_alter_table('account', schema=None) as batch_op:
        batch_op.add_column(sa.Column('activated_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('activated_by', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.BOOLEAN(), nullable=True))
        batch_op.create_foreign_key(None, 'user', ['activated_by'], ['id'])
        batch_op.drop_column('updated_at')
        batch_op.drop_column('status')
        batch_op.drop_column('currency')

    # ### end Alembic commands ###
